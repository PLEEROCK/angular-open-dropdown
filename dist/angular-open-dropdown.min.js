!function(){"use strict";function e(e,t){return{replace:!0,restrict:"E",link:function(o,i,r){if(n(i[0]),!r.for)throw new Error("You must specify for what open dropdown component is attached (container id).");var d,s=r.toggleClick===!0||"true"===r.toggleClick;t(function(){if(d=document.getElementById(r.for),!d)throw new Error("Cant find a container to attach to.");i[0].style.width=d.offsetWidth-2+"px",d.addEventListener("keydown",u),d.addEventListener("click",p),document.addEventListener("mousedown",l)},100),r.isOpened&&o.$watch(r.isOpened,function(e){c()||(i[0].style.display=e===!0?"block":"none")});var c=function(){return r.disabled?e(r.disabled)(o):!1},a=function(n){c()||(r.isOpened?(e(r.isOpened).assign(o,n),o.$digest()):i[0].style.display=n?"block":"none")},l=function(){i[0].contains(event.target)||d.contains(event.target)||a(!1)},u=function(e){switch(e.keyCode){case 38:case 40:return e.preventDefault(),void a(!0);case 27:case 9:return void a(!1);default:return}},p=function(){var e=s&&"none"!==i[0].style.display;a(!e)};o.$on("$destroy",function(){d&&(document.removeEventListener("mousedown",l),d.removeEventListener("keydown",u),d.removeEventListener("click",p))})}}}function n(e){e.style.display="none",e.style.position="absolute",e.style.zIndex||(e.style.zIndex=1),e.style.background||(e.style.background="#FFF"),e.style.border||(e.style.border="1px solid #cccccc")}angular.module("openDropdown",[]),angular.module("openDropdown").directive("openDropdown",e),e.$inject=["$parse","$timeout"]}();